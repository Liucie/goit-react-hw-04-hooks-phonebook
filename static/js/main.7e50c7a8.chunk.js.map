{"version":3,"sources":["components/Form/ContactForm.module.css","components/Form/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","nameId","uuidv4","numberId","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","addNewContact","reset","onSubmit","this","className","s","form","htmlFor","label","type","pattern","title","required","onChange","input","button","Component","Filter","Contacts","contacts","onDelete","list","map","item","onClick","App","useState","setContacts","filter","setFilter","useEffect","localContacts","JSON","parse","localStorage","getItem","setItem","stringify","some","includes","alert","prevState","normalFilter","toLocaleLowerCase","toLowerCase","filteredContacts","neededContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e50c7a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3t_Bu\",\"label\":\"ContactForm_label__3B-wV\",\"input\":\"ContactForm_input__1rqF8\",\"button\":\"ContactForm_button__1BX-i\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ContactForm extends Component {\r\n  nameId = uuidv4();\r\n  numberId = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.setState({ contact });\r\n    this.props.addNewContact(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor={this.nameId} className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={this.nameId}\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberId} className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={this.numberId}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport function Filter({ onChange, value }) {\r\n  return (\r\n    <div>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"filter\"\r\n        value={value}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nexport function Contacts({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li key={id} className={s.item}>\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            type=\"button\"\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './components/Form/ContactForm';\nimport { Filter } from './components/Filter/Filter';\nimport { Contacts } from './components/Contacts/Contacts';\n\nfunction App (){\n  const [contacts, setContacts]=useState([]);\n  const [filter, setFilter] = useState (\"\");\n\n  useEffect(() =>{\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\n    if(localContacts){\n      setContacts(localContacts)\n    }\n  }, []);\n\n  useEffect(() =>{\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = contact =>{\n    const existingContact = contacts.some(item => item.name.includes(contact.name));\n    if(existingContact){\n      return alert(`${contact.name} is already in contacts`)\n    };\n    setContacts((prevState => [contact, ...prevState]))\n  }\n  const deleteContact = (id) => {\n    const neededContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(neededContacts);\n   \n  };\n  const filterChange = e=>{\n    setFilter(e.currentTarget.value)\n  }\n  const filteredContacts = () => {\n    const normalFilter = filter.toLocaleLowerCase();\n    return (contacts.filter((contact) =>contact.name.toLowerCase().includes(normalFilter)));\n  }\n\n  return (\n          <div className=\"App\">\n            <h1 className=\"title\">Phonebook</h1>\n            <ContactForm addNewContact={addNewContact}></ContactForm>\n            <h2 className=\"title\">Contacts</h2>\n            <Filter onChange={filterChange} value={filter}></Filter>\n            <Contacts\n              contacts={filteredContacts()}\n              onDelete={deleteContact}\n            ></Contacts>\n          </div>\n        );\n}\n\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2PH_H\",\"item\":\"Contacts_item__3aQWG\",\"button\":\"Contacts_button__1KElk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__lJsoz\",\"input\":\"Filter_input__7v16M\"};"],"sourceRoot":""}