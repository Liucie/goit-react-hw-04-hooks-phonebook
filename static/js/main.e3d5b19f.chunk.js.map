{"version":3,"sources":["components/Form/ContactForm.module.css","components/Form/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","nameId","uuidv4","numberId","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","addNewContact","reset","onSubmit","this","className","s","form","htmlFor","label","type","pattern","title","required","onChange","input","button","Component","Filter","Contacts","contacts","onDelete","list","map","item","onClick","App","useState","setContacts","filter","setFilter","useEffect","localContacts","JSON","parse","localStorage","getItem","setItem","stringify","some","includes","alert","prevState","normalFilter","toLocaleLowerCase","toLowerCase","filteredContacts","neededContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3d5b19f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3t_Bu\",\"label\":\"ContactForm_label__3B-wV\",\"input\":\"ContactForm_input__1rqF8\",\"button\":\"ContactForm_button__1BX-i\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport class ContactForm extends Component {\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.setState({ contact });\n    this.props.addNewContact(contact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor={this.nameId} className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameId}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <label htmlFor={this.numberId} className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberId}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport function Filter({ onChange, value }) {\n  return (\n    <div>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        type=\"tel\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n        className={s.input}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport function Contacts({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            onClick={() => onDelete(id)}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './components/Form/ContactForm';\nimport { Filter } from './components/Filter/Filter';\nimport { Contacts } from './components/Contacts/Contacts';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localContacts) {\n      setContacts(localContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = contact => {\n    const existingContact = contacts.some(item =>\n      item.name.includes(contact.name),\n    );\n    if (existingContact) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    setContacts(prevState => [contact, ...prevState]);\n  };\n  const deleteContact = id => {\n    const neededContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(neededContacts);\n  };\n  const filterChange = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const filteredContacts = () => {\n    const normalFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalFilter),\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm addNewContact={addNewContact}></ContactForm>\n      <h2 className=\"title\">Contacts</h2>\n      <Filter onChange={filterChange} value={filter}></Filter>\n      <Contacts\n        contacts={filteredContacts()}\n        onDelete={deleteContact}\n      ></Contacts>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2PH_H\",\"item\":\"Contacts_item__3aQWG\",\"button\":\"Contacts_button__1KElk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__lJsoz\",\"input\":\"Filter_input__7v16M\"};"],"sourceRoot":""}